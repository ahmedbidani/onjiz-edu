/**
 * @copyright 2017 @ ZiniMedia Team
 * @author thanhvo
 * @create 2017/07/05 11:51
 * @update 2017/07/05 16:54
 * @file api/services/ErrorService.js
 */
'use strict';

const ErrorService = {
    //SERVER
    SERVER_ERROR: { code: 'SERVER_ERROR', message: 'Have error at server' },

    SYSTEM_SESSION_EXPIRED: { code: 'SYSTEM_SESSION_EXPIRED', message: 'Session expired.' },
    SYSTEM_ERROR: { code: 'SYS001', message: 'System error' },
    SYSTEM_TOKEN_REQUIRE: { code: 'SYS002', message: "Authentication token is required" },
    SYSTEM_TOKEN_WRONG: { code: 'SYS003', message: "Authentication token are not matching" },
    SYSTEM_TOKEN_EXPIRED: { code: 'SYS004', message: "Authentication token is expired" },
    SYSTEM_REQUEST_TIMEOUT: { code: 'SYS005', message: "Authentication error request timeout" },
    SYSTEM_UPDATE_TOKEN_FAIL: { code: 'SYS006', message: "Update token fail" },
    SYSTEM_SOCKET_ERROR: { code: 'SYS007', message: "Socket error" },
    SYSTEM_JSON_FORMAT_FAIL: { code: 'SYS008', message: "JSON format is invalid" },
    SYSTEM_ENUME_VALUE_FAIL: { code: 'SYS009', message: "Enum value is invalid" },
    SYSTEM_NOT_INTEGER_FAIL: { code: 'SYS010', message: "Format data is not integer" },
    SYSTEM_NOT_LOGIN: { code: 'SYS011', message: "User is not logged in" },
    ERR_ID_REQUIRED: { code: 'ID001', message: "ID is required" },
    SYSTEM_METHOD_NOT_ALLOWED: { code: 'SYSTEM_METHOD_NOT_ALLOWED', message: "Method is not allowed" },
    INVALID_DATE: { code: 'INVALID_DATE', message: "Invalid date." },

    
    //SCHOOL
    SCHOOL_ID_REQUIRED: { code: 'SCHOOL_ID_REQUIRED', message: "School id is required" },
    SCHOOL_EMAIL_REQUIRED: { code: 'SCHOOL_EMAIL_REQUIRED', message: "School email address is required" },
    SCHOOL_NAME_REQUIRED: { code: 'SCHOOL_NAME_REQUIRED', message: "School name is required" },
    SCHOOL_CODE_REQUIRED: { code: 'SCHOOL_CODE_REQUIRED', message: "School code is required" },
    SCHOOL_PHONE_REQUIRED: { code: 'SCHOOL_PHONE_REQUIRED', message: "School phone is required" },
    SCHOOL_NAME_HAS_BEEN_REGISTERED: { code: 'SCHOOL_NAME_HAS_BEEN_REGISTERED', message: "School name has been registered" },
    SCHOOL_CODE_HAS_BEEN_REGISTERED: { code: 'SCHOOL_CODE_HAS_BEEN_REGISTERED', message: "School code has been registered" },
    SCHOOL_EMAIL_HAS_BEEN_REGISTERED: { code: 'SCHOOL_EMAIL_HAS_BEEN_REGISTERED', message: "School email address has been registered" },
    SCHOOL_PHONE_HAS_BEEN_REGISTERED: { code: 'SCHOOL_PHONE_HAS_BEEN_REGISTERED', message: "School phone has been registered" },
    SCHOOL_NOT_FOUND: { code: 'SCHOOL_NOT_FOUND', message: "School is not found" },
    
    // SETTINGS
    SETTINGS_KEY_IS_REQUIRED: { code: 'SETTINGS_KEY_IS_REQUIRED', message: 'Settings key is required' },
    SETTINGS_STUDENT_MOVING_PROCESS_NOT_ACTIVE: { code: 'SETTINGS_STUDENT_MOVING_PROCESS_NOT_ACTIVE', message: 'Student moving process is inactive' },

    // AUTH
    AUTH_ERR_AUTH_NOT_LOGIN: { code: 'AUTH_ERR_AUTH_NOT_LOGIN', message: "Error not logged in." },
    AUTH_ERR_AUTH_ALREADY_LOGIN: { code: 'AUTH_ERR_AUTH_ALREADY_LOGIN', message: "Error already logged in." },
    AUTH_ERR_ACCOUNT_NOTREADY: { code: 'AUTH_ERR_ACCOUNT_NOTREADY', message: "Error the account is not ready to operate." },
    AUTH_ERR_ACCOUNT_NOT_HAVE_PERMISSION: { code: 'AUTH_ERR_ACCOUNT_NOT_HAVE_PERMISSION', message: "This account is not have permission to access this action" },
    AUTH_ERR_SECRET_NOT_VALID: { code: 'AUTH_ERR_SECRET_NOT_VALID', message: "Secret not valid" },
    AUTH_ERR_CODE_VERIFY_NOT_VALID: { code: 'AUTH_ERR_CODE_VERIFY_NOT_VALID', message: "Code verify not valid" },
    AUTH_ERR_SYSTEM_TOKEN_REQUIRE: { code: 'AUTH_ERR_SYSTEM_TOKEN_REQUIRE', message: "System Token is required" },
    AUTH_ERR_NOT_FOUND: { code: 'AUTH_ERR_NOT_FOUND', message: "Token not found" },
    INACTIVE_TOKEN: { code: 'INACTIVE_TOKEN', message: "Inactive token" },

    //USER
    USER_ADD_FAIL: { code: 'USER_ADD_FAIL', message: "Add user failed" },
    USER_EDIT_FAIL: { code: 'USER_EDIT_FAIL', message: "Edit user failed" },
    USER_DEL_FAIL: { code: 'USER_DEL_FAIL', message: "Delete user failed" },
    USER_NOT_FOUND: { code: 'USER_NOT_FOUND', message: "User not found" },
    USER_NOT_HAVE_PERMISSION: { code: 'USER_NOT_HAVE_PERMISSION', message: "No login permission" },
    USER_ID_REQUIRED: { code: 'USER_ID_REQUIRED', message: "Please pass ID" },
    USER_EMAIL_REQUIRED: { code: 'USER_EMAIL_REQUIRED', message: "Please enter User Email" },
    USER_REQUIRED: { code: 'USER_REQUIRED', message: "Please enter username account" },
    USER_PHONE_REQUIRED: { code: 'USER_PHONE_REQUIRED', message: "Please enter User Phone" },
    USER_PASSWORD_REQUIRED: { code: 'USER_PASSWORD_REQUIRED', message: "Please enter a password" },
    USER_FIRST_NAME_REQUIRED: { code: 'USER_FIRST_NAME_REQUIRED', message: "First name is required!" },
    USER_LAST_NAME_REQUIRED: { code: 'USER_LAST_NAME_REQUIRED', message: "Last name is required!" },
    PASSWORD_IS_NOT_MATCH: { code: 'PASSWORD_IS_NOT_MATCH', message: "Password does not match" },
    USER_RECORD_EXISTED: { code: 'USER_RECORD_EXISTED', message: "User record already exists" },
    USER_IS_EXISTED: { code: 'USER_IS_EXISTED', message: "User account already exists" },
    PHONE_IS_EXISTED: { code: 'PHONE_IS_EXISTED', message: "User phone number already exists" },
    EMAIL_IS_EXISTED: { code: 'EMAIL_IS_EXISTED', message: "User email already exists" },
    AUTH_ERR_ACCOUNT_NOTREADY: { code: 'AUTH_ERR_ACCOUNT_NOTREADY', message: "Account not ready to use" },

    USER_ERR_ADD_FAIL: { code: 'USER_ERR_ADD_FAIL', message: "User add failed" },
    USER_ERR_EDIT_FAIL: { code: 'USER_ERR_EDIT_FAIL', message: "User edit failed" },
    USER_ERR_EMAIL_EXISTED: { code: 'USER_ERR_EMAIL_EXISTED', message: "Your email address is existed." },
    USER_ERR_USERNAME_EXISTED: { code: 'USER_ERR_EMAIL_EXISTED', message: "Your user is existed." },
    USER_ERR_PHONE_EXISTED: { code: 'USER_ERR_PHONE_EXISTED', message: "Your phone number is existed." },
    USER_ERR_EMAIL_PHONE_EXISTED: { code: 'USER_ERR_EMAIL_PHONE_EXISTED', message: "Your email address or phone number is existed." },
    USER_ERR_ID_REQUIRED: { code: 'USER_ERR_ID_REQUIRED', message: "User Id is required" },
    USER_ERR_USER_EMAIL_REQUIRED: { code: 'USER_ERR_USER_EMAIL_REQUIRED', message: "Email is required" },
    USER_ERR_USER_PHONE_REQUIRED: { code: 'USER_ERR_USER_PHONE_REQUIRED', message: "Phone is required" },
    USER_ERR_USER_PASSWORD_REQUIRED: { code: 'USER_ERR_USER_PASSWORD_REQUIRED', message: "Password is required" },
    USER_ERR_USER_FULLNAME_REQUIRED: { code: 'USER_ERR_USER_FULLNAME_REQUIRED', message: "User FullName is required" },
    USER_ERR_USER_INPUT_REQUIRED: { code: 'USER_ERR_USER_INPUT_REQUIRED', message: 'User Input required' },
    USER_ERR_NOT_FOUND: { code: 'USER_ERR_NOT_FOUND', message: 'Account does not exist !' },
    USER_ERR_STUDENT_NOT_FOUND: { code: 'USER_ERR_STUDENT_NOT_FOUND', message: 'Account has no students!' },
    USER_ERR_PASSWORD_WRONG: { code: 'USER_ERR_PASSWORD_WRONG', message: 'Wrong password !' },
    USER_LOCKED: { code: 'USER_LOCKED', message: 'Account is temporarily locked!' },

    //PARENT
    PARENT_ID_REQUIRED: { code: 'PARENT_ID_REQUIRED', message: "Parent id is required" },
    PARENT_IS_EXISTED: { code: 'PARENT_IS_EXISTED', message: "Parent is existed" },
    PARENT_EMAIL_REQUIRED: { code: 'PARENT_EMAIL_REQUIRED', message: "Parent email is required" },
    PARENT_PHONE_REQUIRED: { code: 'PARENT_PHONE_REQUIRED', message: "Parent phone is required" },
    PARENT_PASSWORD_IS_NOT_MATCH: { code: 'PARENT_PASSWORD_IS_NOT_MATCH', message: "Mật khẩu không trùng khớp" },
    PARENT_USERNAME_REQUIRED: { code: 'PARENT_USERNAME_REQUIRED', message: "Parent Username is required" },
    PARENT_PASSWORD_REQUIRED: { code: 'PARENT_PASSWORD_REQUIRED', message: "Parent Password is required" },
    PARENT_NOT_FOUND: { code: 'PARENT_NOT_FOUND', message: "Parent is not found" },
    PARENT_ERR_ADD_FAIL: { code: 'PARENT_ERR_ADD_FAIL', message: "Parent add failed" },
    PARENT_ERR_EDIT_FAIL: { code: 'PARENT_ERR_EDIT_FAIL', message: "Parent edit failed" },
    PARENT_ERR_UPDATE_FAIL: { code: 'PARENT_ERR_UPDATE_FAIL', message: "Parent update failed" },
    PARENT_ERR_RECORD_EXISTED: { code: 'PARENT_ERR_RECORD_EXISTED', message: "Parent have already existed" },
    PARENT_ERR_NOT_FOUND: { code: 'PARENT_ERR_NOT_FOUND', message: "There are no parent in the system" },
    PARENT_ERR_ID_REQUIRED: { code: 'PARENT_ERR_ID_REQUIRED', message: "Parent Id is required" },
    PARENT_ERR_FULLNAME_REQUIRED: { code: 'PARENT_ERR_FULLNAME_REQUIRED', message: "First and last name cannot be blank" },
    PARENT_ERR_EMAILADDRESS_REQUIRED: { code: 'PARENT_ERR_EMAILADDRESS_REQUIRED', message: "Email cannot be empty" },
    PARENT_ERR_PHONE_REQUIRED: { code: 'PARENT_ERR_PHONE_REQUIRED', message: "Phone number cannot be empty" },
    PARENT_ERR_USERNAME_REQUIRED: { code: 'PARENT_ERR_USERNAME_REQUIRED', message: "Account username cannot be empty" },
    PARENT_ERR_PASSWORD_REQUIRED: { code: 'PARENT_ERR_PASSWORD_REQUIRED', message: "Password is required" },
    PARENT_ERR_EMAIL_PARENT_EXISTED: { code: 'PARENT_ERR_EMAIL_PARENT_EXISTED', message: "Email already exists" },
    PARENT_ERR_PHONE_PARENT_EXISTED: { code: 'PARENT_ERR_PHONE_PARENT_EXISTED', message: "Phone number already exists" },
    PARENT_ERR_USERNAME_PARENT_EXISTED: { code: 'PARENT_ERR_USERNAME_PARENT_EXISTED', message: "Account already exists" },
    PARENT_ERR_PASSWORD_WRONG: { code: 'PARENT_ERR_PASSWORD_WRONG', message: "Password is wrong" },
    GUARDIANS_MUST_DIFFERENT_PARENT: { code: 'GUARDIANS_MUST_DIFFERENT_PARENT', message: "Guardians must different parent" },

    //STUDENT
    STUDENT_ID_REQUIRED: { code: 'STUDENT_ID_REQUIRED', message: "Student id is required" },
    STUDENT_CODE_REQUIRED: { code: 'STUDENT_CODE_REQUIRED', message: "Student code is required" },
    STUDENT_CODE_DUPLICATED: { code: 'STUDENT_CODE_DUPLICATED', message: "Student code is duplicated" },
    STUDENT_NOT_FOUND: { code: 'STUDENT_NOT_FOUND', message: "Student is not found" },
    STUDENT_ERROR_IMPORT: { code: 'STUDENT_ERROR_IMPORT', message: "Import Student is fail" },

    STUDENT_ERR_ADD_FAIL: { code: 'STUDENT_ERR_ADD_FAIL', message: "Student add failed" },
    STUDENT_ERR_EDIT_FAIL: { code: 'STUDENT_ERR_EDIT_FAIL', message: "Student edit failed" },
    STUDENT_ERR_UPDATE_FAIL: { code: 'STUDENT_ERR_UPDATE_FAIL', message: "Student update failed" },
    STUDENT_ERR_NOT_FOUND: { code: 'STUDENT_ERR_NOT_FOUND', message: "Student is not found" },
    STUDENT_ERR_ID_REQUIRED: { code: 'STUDENT_ERR_ID_REQUIRED', message: "Student Id is required" },
    STUDENT_ERR_FULLNAME_REQUIRED: { code: 'STUDENT_ERR_FULLNAME_REQUIRED', message: "Fullname is required" },
    STUDENT_ERR_FIRSTNAME_REQUIRED: { code: 'STUDENT_ERR_FIRSTNAME_REQUIRED', message: "First name is required" },
    STUDENT_ERR_LASTNAME_REQUIRED: { code: 'STUDENT_ERR_LASTNAME_REQUIRED', message: "Last name is required" },
    STUDENT_ERR_BIRTHDAY_REQUIRED: { code: 'STUDENT_ERR_BIRTHDAY_REQUIRED', message: "Birthday is required" },
    STUDENT_ERR_GENDER_REQUIRED: { code: 'STUDENT_ERR_GENDER_REQUIRED', message: "Gender is required" },

    //MEDIA
    MEDIA_ID_REQUIRED: { code: 'MEDIA_ID_REQUIRED', message: "Media id is required." },
    MEDIA_TITLE_REQUIRED: { code: 'MEDIA_TITLE_REQUIRED', message: "Media title is required." },
    MEDIA_OBJECT_NOT_FOUND: { code: 'MEDIA_OBJECT_NOT_FOUND', message: "Media object is not found." },
    MEDIA_UPLOAD_FAILDED: { code: 'MEDIA_OBJECT_NOT_FOUND', message: "Media upload failded." },

    //ALBUM
    ALBUM_ID_REQUIRED: { code: 'ALBUM_ID_REQUIRED', message: "Album id is required." },
    ALBUM_TITLE_REQUIRED: { code: 'ALBUM_TITLE_REQUIRED', message: "Album title is required." },
    ALBUM_OBJECT_NOT_FOUND: { code: 'ALBUM_OBJECT_NOT_FOUND', message: "Album object is not found." },
    ALBUM_INDEX_CMT_REQUIRED: { code: 'ALBUM_INDEX_CMT_REQUIRED', message: "Index of comment is required" },
    ALBUM_ERR_ADD_FAIL: { code: 'ALBUM_ERR_ADD_FAIL', message: "Album add failed" },
    ALBUM_ERR_EDIT_FAIL: { code: 'ALBUM_ERR_EDIT_FAIL', message: "Album edit failed" },
    ALBUM_ERR_UPDATE_FAIL: { code: 'ALBUM_ERR_UPDATE_FAIL', message: "Album update failed" },
    ALBUM_ERR_RECORD_EXISTED: { code: 'ALBUM_ERR_RECORD_EXISTED', message: "Album have already existed" },
    ALBUM_ERR_NOT_FOUND: { code: 'ALBUM_ERR_NOT_FOUND', message: "Album is not found" },
    ALBUM_ERR_TITLEALBUM_REQUIRED: { code: 'ALBUM_ERR_TITLEALBUM_REQUIRED', message: "Title is required" },
    ALBUM_ERR_PHOTO_REQUIRED: { code: 'ALBUM_ERR_PHOTO_REQUIRED', message: "Photos are required" },
    ALBUM_ERR_OWNER_REQUIRED: { code: 'ALBUM_ERR_OWNER_REQUIRED', message: "Owner is required" },
    ALBUM_ERR_CLASS_REQUIRED: { code: 'ALBUM_ERR_CLASS_REQUIRED', message: "Class is required" },
    ALBUM_ERR_SPACE_REQUIRED: { code: 'ALBUM_ERR_SPACE_REQUIRED', message: "Please not input space" },
    ALBUM_ERR_ID_REQUIRED: { code: 'ALBUM_ERR_ID_REQUIRED', message: "Id is required" },
    ALBUM_ERR_COURSE_SESSION_REQUIRED: {code:'ALBUM_ERR_COURSE_SESSION_REQUIRED', message: "Coures session is required"},

    // COMMENT
    COMMENT_ERR_ADD_FAIL: { code: 'COMMENT_ERR_ADD_FAIL', message: "Comment add failed" },
    COMMENT_ERR_EDIT_FAIL: { code: 'COMMENT_ERR_EDIT_FAIL', message: "Comment edit failed" },
    COMMENT_ERR_UPDATE_FAIL: { code: 'COMMENT_ERR_UPDATE_FAIL', message: "Comment update failed" },
    COMMENT_ERR_RECORD_EXISTED: { code: 'COMMENT_ERR_RECORD_EXISTED', message: "Comment have already existed" },
    COMMENT_ERR_NOT_FOUND: { code: 'COMMENT_ERR_NOT_FOUND', message: "Comment is not found" },
    COMMENT_ERR_ID_REQUIRED: { code: 'COMMENT_ERR_ID_REQUIRED', message: "Comment Id is required" },
    COMMENT_ERR_CONTENT_REQUIRED: { code: 'COMMENT_ERR_CONTENT_REQUIRED', message: "Content is required" },

    //CLASS
    CLASS_ID_REQUIRED: { code: 'CLASS_ID_REQUIRED', message: "Class id is required." },
    CLASS_TITLE_REQUIRED: { code: 'CLASS_TITLE_REQUIRED', message: "Class title is required." },
    CLASS_DES_REQUIRED: { code: 'CLASS_DES_REQUIRED', message: "Class description is required." },
    CLASS_CODE_IS_REQUIRED: { code: 'CLASS_CODE_IS_REQUIRED', message: "Class code is required." },
    CLASS_CODE_EXISTED: { code: 'CLASS_CODE_EXISTED', message: "Class code is existed." },
    CLASS_OBJECT_NOT_FOUND: { code: 'CLASS_OBJECT_NOT_FOUND', message: "Class object is not found." },
    CLASS_CODE_DUPLICATED: { code: 'CLASS_CODE_DUPLICATED', message: "Code class was duplicated." },
    CLASS_COURSE_SESSION_REQURIED: { code: 'CLASS_COURSE_SESSION_REQURIED', message: "Course session of class is required." },

    CLASS_ERR_ADD_FAIL: { code: 'CLASS_ERR_ADD_FAIL', message: "Class add failed" },
    CLASS_ERR_EDIT_FAIL: { code: 'CLASS_ERR_EDIT_FAIL', message: "Class edit failed" },
    CLASS_ERR_UPDATE_FAIL: { code: 'CLASS_ERR_UPDATE_FAIL', message: "Class update failed" },
    CLASS_ERR_RECORD_EXISTED: { code: 'CLASS_ERR_RECORD_EXISTED', message: "Class have already existed" },
    CLASS_ERR_NOT_FOUND: { code: 'CLASS_ERR_NOT_FOUND', message: "Class is not found" },
    CLASS_ERR_ID_REQUIRED: { code: 'CLASS_ERR_ID_REQUIRED', message: "Class Id is required" },
    CLASS_ERR_NAME_REQUIRED: { code: 'CLASS_ERR_NAME_REQUIRED', message: "Class Name is required" },
    CLASS_ERR_TOTALSTUDENT_REQUIRED: { code: 'CLASS_ERR_TOTALSTUDENT_REQUIRED', message: "Total student is required" },
    CLASS_ERR_ADMISSIONNUMBER_REQUIRED: { code: 'CLASS_ERR_ADMISSIONNUMBER_REQUIRED', message: "Admission number is required" },
    CLASS_ERR_OVERADMISSION_REQUIRED: { code: 'CLASS_ERR_OVERADMISSION_REQUIRED', message: "Student number exceeds the threshold" },
    CLASS_ERR_LIMIT_REQUIRED: { code: 'CLASS_ERR_LIMIT_REQUIRED', message: "Admission of a class should be 150" },
    CLASS_ERR_MINIMUM_REQUIRED: { code: 'CLASS_ERR_MINIMUM_REQUIRED', message: "Class should have at least 30" },
    CLASS_ERR_SDKCLASS_EXISTED: { code: 'CLASS_ERR_SDKCLASS_EXISTED', message: "SDK Class have already existed" },
    CLASS_ERR_SDKCLASS_REQUIRED: { code: 'CLASS_ERR_SDKCLASS_REQUIRED', message: "SDK Class is required" },


    // DAY OFF
    DAYOFF_ERR_ADD_FAIL: { code: 'DAYOFF_ERR_ADD_FAIL', message: "Dayoff add failed" },
    DAYOFF_ERR_EDIT_FAIL: { code: 'DAYOFF_ERR_EDIT_FAIL', message: "Dayoff edit failed" },
    DAYOFF_ERR_UPDATE_FAIL: { code: 'DAYOFF_ERR_UPDATE_FAIL', message: "Dayoff update failed" },
    DAYOFF_ERR_RECORD_EXISTED: { code: 'DAYOFF_ERR_RECORD_EXISTED', message: "Dayoff have already existed" },
    DAYOFF_ERR_NOT_FOUND: { code: 'DAYOFF_ERR_NOT_FOUND', message: "Dayoff is not found" },
    DAYOFF_ERR_STUDENT_REQUIRED: { code: 'DAYOFF_ERR_STUDENT_REQUIRED', message: "STUDENT ID is required" },
    DAYOFF_ERR_CLASS_REQUIRED: { code: 'DAYOFF_ERR_CLASS_REQUIRED', message: "Class ID is required" },
    DAYOFF_ERR_DATEOFF_REQUIRED: { code: 'DAYOFF_ERR_DATEOFF_REQUIRED', message: "DateOff is required" },
    DAYOFF_ERR_DATE_DUPLICATED: { code: 'DAYOFF_ERR_DATE_DUPLICATED', message: "DateOff is duplicated" },

    //FOOD
    FOOD_ID_REQUIRED: { code: 'FOOD_ID_REQUIRED', message: "Food ID is required." },
    FOOD_TITLE_REQUIRED: { code: 'FOOD_TITLE_REQUIRED', message: "Food title is required." },
    FOOD_CODE_REQUIRED: { code: 'FOOD_CODE_REQUIRED', message: "Food title is required." },
    FOOD_NOT_FOUND: { code: 'FOOD_NOT_FOUND', message: "Food is not found." },
    FOOD_CODE_DUPLICATED: { code: 'FOOD_CODE_DUPLICATED', message: "Code food was duplicated." },
    FOOD_ERR_ADD_FAIL: { code: 'FOOD_ERR_ADD_FAIL', message: "Food add failed" },
    FOOD_ERR_EDIT_FAIL: { code: 'FOOD_ERR_EDIT_FAIL', message: "Food edit failed" },
    FOOD_ERR_UPDATE_FAIL: { code: 'FOOD_ERR_UPDATE_FAIL', message: "Food update failed" },
    FOOD_ERR_RECORD_EXISTED: { code: 'FOOD_ERR_RECORD_EXISTED', message: "Food have already existed" },
    FOOD_ERR_NOT_FOUND: { code: 'FOOD_ERR_NOT_FOUND', message: "Food is not found" },
    FOOD_ERR_ID_REQUIRED: { code: 'FOOD_ERR_ID_REQUIRED', message: "Food Id is required" },
    FOOD_ERR_TITLEFOOD_REQUIRED: { code: 'FOOD_ERR_TITLEFOOD_REQUIRED', message: "Food title is required" },
    FOOD_ERR_NUTRITION_REQUIRED: { code: 'FOOD_ERR_NUTRITION_REQUIRED', message: "Nutrition is required" },
    FOOD_ERR_DESCRIPTION_REQUIRED: { code: 'FOOD_ERR_DESCRIPTION_REQUIRED', message: "Description  is required" },
    FOOD_ERROR_IMPORT: { code: 'FOOD_ERROR_IMPORT', message: "Import Food is fail" },

    // MEDIA
    MEDIA_ERR_TITLEMEDIA_REQUIRED: { code: 'MEDIA_ERR_TITLEMEDIA_REQUIRED', message: "Title is required" },
    MEDIA_ERR_PATH_REQUIRED: { code: 'MEDIA_ERR_PATH_REQUIRED', message: "Path is required" },
    MEDIA_ERR_ID_REQUIRED: { code: 'MEDIA_ERR_ID_REQUIRED', message: "Id is required" },
    MEDIA_ERR_UPLOAD_FAIL: { code: 'MEDIA_ERR_UPLOAD_FAIL', message: "File can not be uploaded" },
    MEDIA_ERR_NOT_FOUND: { code: 'MEDIA_ERR_NOT_FOUND', message: "Media not found" },

    //MENU
    MENU_ID_REQUIRED: { code: 'MENU_ID_REQUIRED', message: "Menu ID is required." },
    MENU_TITLE_REQUIRED: { code: 'MENU_TITLE_REQUIRED', message: "Menu title is required." },
    MENU_CODE_REQUIRED: { code: 'MENU_CODE_REQUIRED', message: "Menu title is required." },
    MENU_EXISTED: { code: 'MENU_EXISTED', message: "Menu existed." },
    MENU_NOT_FOUND: { code: 'MENU_NOT_FOUND', message: "Menu is not found." },
    MENU_NOT_ALLOW_IN_WEEKEND: { code: 'MENU_NOT_ALLOW_IN_WEEKEND', message: "Can not add menu at weekend." },
    MENU_ERR_TITLE_REQUIRED: { code: 'MENU_ERR_TITLE_REQUIRED', message: "Title is required" },
    MENU_ERR_ADD_FAIL: { code: 'MENU_ERR_ADD_FAIL', message: "Menu add failed" },
    MENU_ERR_EDIT_FAIL: { code: 'MENU_ERR_EDIT_FAIL', message: "Menu edit failed" },
    MENU_ERR_UPDATE_FAIL: { code: 'MENU_ERR_UPDATE_FAIL', message: "Menu update failed" },
    MENU_ERR_RECORD_EXISTED: { code: 'MENU_ERR_RECORD_EXISTED', message: "Menu have already existed" },
    MENU_ERR_NOT_FOUND: { code: 'MENU_ERR_NOT_FOUND', message: "Menu is not found" },
    MENU_ERR_ID_REQUIRED: { code: 'MENU_ERR_ID_REQUIRED', message: "Menu Id is required" },
    MENU_ERR_FOOD_REQUIRED: { code: 'MENU_ERR_FOOD_REQUIRED', message: "Food missing" },
    MENU_ERR_TIME_REQUIRED: { code: 'MENU_ERR_TIME_REQUIRED', message: "Time is required" },
    MENU_ERR_SLOT_REQUIRED: { code: 'MENU_ERR_SLOT_REQUIRED', message: "Slot is required" },
    MENU_ERR_DATE_REQUIRED: { code: 'MENU_ERR_DATE_REQUIRED', message: "Date is required" },
    MENU_ERR_CLASSID_REQUIRED: { code: 'MENU_ERR_CLASSID_REQUIRED', message: "Class Id is required" },

    //SUBJECT
    SUBJECT_ID_REQUIRED: { code: 'SUBJECT_ID_REQUIRED', message: "Subject ID is required." },
    SUBJECT_IS_REQUIRED: { code: 'SUBJECT_IS_REQUIRED', message: "Subject is required." },
    SUBJECT_TITLE_REQUIRED: { code: 'SUBJECT_TITLE_REQUIRED', message: "Subject title is required." },
    SUBJECT_CODE_REQUIRED: { code: 'SUBJECT_CODE_REQUIRED', message: "Subject title is required." },
    SUBJECT_NOT_FOUND: { code: 'SUBJECT_NOT_FOUND', message: "Subject is not found." },
    SUBJECT_CODE_DUPLICATED: { code: 'SUBJECT_CODE_DUPLICATED', message: "Code subject was duplicated." },

    SUBJECT_ERR_ADD_FAIL: { code: 'SUBJECT_ERR_ADD_FAIL', message: "Subject add failed" },
    SUBJECT_ERR_EDIT_FAIL: { code: 'SUBJECT_ERR_EDIT_FAIL', message: "Subject edit failed" },
    SUBJECT_ERR_UPDATE_FAIL: { code: 'SUBJECT_ERR_UPDATE_FAIL', message: "Subject update failed" },
    SUBJECT_ERR_RECORD_EXISTED: { code: 'SUBJECT_ERR_RECORD_EXISTED', message: "Subject have already existed" },
    SUBJECT_ERR_NOT_FOUND: { code: 'SUBJECT_ERR_NOT_FOUND', message: "Subject is not found" },
    SUBJECT_ERR_ID_REQUIRED: { code: 'SUBJECT_ERR_ID_REQUIRED', message: "Subject Id is required" },
    SUBJECT_ERR_TITLE_REQUIRED: { code: 'SUBJECT_ERR_TITLE_REQUIRED', message: "Title is required" },
    SUBJECT_ERR_CODE_REQUIRED: { code: 'SUBJECT_ERR_CODE_REQUIRED', message: "Code student is required" },
    SUBJECT_ERR_ALIAS_REQUIRED: { code: 'SUBJECT_ERR_ALIAS_REQUIRED', message: "Alias is required" },
    SUBJECT_ERR_DESCRIPTION_REQUIRED: { code: 'SUBJECT_ERR_DESCRIPTION_REQUIRED', message: "Description  is required" },
    SUBJECT_ERR_CLASSID_REQUIRED: { code: 'SUBJECT_ERR_CLASSID_REQUIRED', message: "Class Id is required" },
    SUBJECT_ERROR_IMPORT: { code: ' SUBJECT_ERROR_IMPORT', message: "Import Subject is fail" },
    // COURSE SESSION
    COURSE_SESSION_ID_REQUIRED: { code: 'COURSE_SESSION_ID_REQUIRED', message: "ID is required." },
    COURSE_SESSION_IS_REQUIRED: { code: 'COURSE_SESSION_IS_REQUIRED', message: "Course session is required." },
    COURSE_SESSION_TITLE_REQUIRED: { code: 'COURSE_SESSION_TITLE_REQUIRED', message: "Title is required." },
    COURSE_SESSION_CODE_REQUIRED: { code: 'COURSE_SESSION_CODE_REQUIRED', message: "Code is required." },
    COURSE_SESSION_BRANCH_REQUIRED: { code: 'COURSE_SESSION_BRAND_REQUIRED', message: "Branch field is required." },
    COURSE_SESSION_TIME_INVALID: { code: 'COURSE_SESSION_TIME_INVALID', message: "Time is invalid." },
    COURSE_SESSION_NOT_FOUND: { code: 'COURSE_SESSION_NOT_FOUND', message: "Course session is not found." },
    COURSE_SESSION_CODE_DUPLICATED: { code: 'COURSE_SESSION_CODE_DUPLICATED', message: "Code course session was duplicated." },
    CAN_NOT_DELETE_COURSE_SESSION_HAVE_CLASS: { code: 'CAN_NOT_DELETE_COURSE_SESSION_HAVE_CLASS', message: "It is not possible to delete a year that already has a class" },

    // PICKUP
    PICKUP_ID_REQUIRED: { code: 'PICKUP_ID_REQUIRED', message: "Pick up Id is required." },
    PICKUP_DATE_REQUIRED: { code: 'PICKUP_DATE_REQUIRED', message: "Date is required." },
    PICKUP_DATE_INVALID: { code: 'PICKUP_DATE_INVALID', message: "Invalid date." },
    PICKUP_TIME_REQUIRED: { code: 'PICKUP_TIME_REQUIRED', message: "Time is required." },
    PICKUP_NOT_FOUND: { code: 'PICKUP_NOT_FOUND', message: "Pick up is not found." },
    PICKUP_NOT_ALLOWED: {code: 'PICKUP_NOT_ALLOWED', message: "Can not pick up before check in student"},

    //SCHEDULE
    SCHEDULE_DATEUSE_REQUIRED: { code: 'SCHEDULE_DATEUSE_REQUIRED', message: "Schedule date use is required." },
    SCHEDULE_EXISTED: { code: 'SCHEDULE_EXISTED', message: "Schedule is existed." },
    SCHEDULE_SLOT_SUBJECTS_EMPTY: { code: 'SCHEDULE_SLOT_SUBJECTS_EMPTY', message: "Schedule slot subjects empty." },
    SCHEDULE_NOT_FOUND: { code: 'SCHEDULE_NOT_FOUND', message: "Schedule is not found." },

    SCHEDULE_ERR_ADD_FAIL: { code: 'SCHEDULE_ERR_ADD_FAIL', message: "Schedule add failed" },
    SCHEDULE_ERR_EDIT_FAIL: { code: 'SCHEDULE_ERR_EDIT_FAIL', message: "Schedule edit failed" },
    SCHEDULE_ERR_UPDATE_FAIL: { code: 'SCHEDULE_ERR_UPDATE_FAIL', message: "Schedule update failed" },
    SCHEDULE_ERR_RECORD_EXISTED: { code: 'SCHEDULE_ERR_RECORD_EXISTED', message: "Schedule have already existed" },
    SCHEDULE_ERR_NOT_FOUND: { code: 'SCHEDULE_ERR_NOT_FOUND', message: "Schedule is not found" },
    SCHEDULE_ERR_ID_REQUIRED: { code: 'SCHEDULE_ERR_ID_REQUIRED', message: "Schedule Id is required" },
    SCHEDULE_ERR_TITLE_REQUIRED: { code: 'SCHEDULE_ERR_TITLE_REQUIRED', message: "Title is required" },
    SCHEDULE_ERR_TIME_REQUIRED: { code: 'SCHEDULE_ERR_TIME_REQUIRED', message: "Time is required" },
    SCHEDULE_ERR_DATE_REQUIRED: { code: 'SCHEDULE_ERR_DATE_REQUIRED', message: "Date is required" },
    SCHEDULE_ERR_SUBJECT_REQUIRED: { code: 'SCHEDULE_ERR_SUBJECT_REQUIRED', message: "Subject is required" },
    SCHEDULE_ERR_CLASSID_REQUIRED: { code: 'SCHEDULE_ERR_CLASSID_REQUIRED', message: "Class Id is required" },
    SCHEDULE_ERROR_IMPORT: { code: ' SCHEDULE_ERROR_IMPORT', message: "Import Schedule is fail" },
    //TAXONOMY
    TAXONOMY_ID_REQUIRED: { code: 'TAXONOMY_ID_REQUIRED', message: "Taxonomy id is required." },
    TAXONOMY_TITLE_REQUIRED: { code: 'TAXONOMY_TITLE_REQUIRED', message: "Taxonomy title is required." },
    TAXONOMY_OBJECT_NOT_FOUND: { code: 'TAXONOMY_OBJECT_NOT_FOUND', message: "Taxonomy object is not found." },
    TAXONOMY_ERR_ADD_FAIL: { code: 'TAXONOMY_ERR_ADD_FAIL', message: "Taxonomy add failed" },
    TAXONOMY_ERR_EDIT_FAIL: { code: 'TAXONOMY_ERR_EDIT_FAIL', message: "Taxonomy edit failed" },
    TAXONOMY_ERR_UPDATE_FAIL: { code: 'TAXONOMY_ERR_UPDATE_FAIL', message: "Taxonomy update failed" },
    TAXONOMY_ERR_RECORD_EXISTED: { code: 'TAXONOMY_ERR_RECORD_EXISTED', message: "" },
    TAXONOMY_ERR_NOT_FOUND: { code: 'TAXONOMY_ERR_NOT_FOUND', message: "Taxonomy is not found" },
    TAXONOMY_ERR_ID_REQUIRED: { code: 'TAXONOMY_ERR_ID_REQUIRED', message: "Taxonomy Id is required" },
    TAXONOMY_ERR_TITLE_REQUIRED: { code: 'TAXONOMY_ERR_TITLE_REQUIRED', message: "Title is required" },
    TAXONOMY_ERR_ALIAS_REQUIRED: { code: 'TAXONOMY_ERR_ALIAS_REQUIRED', message: "Alias is required" },

    //POST
    POST_ID_REQUIRED: { code: 'POST_ID_REQUIRED', message: "Taxonomy id is required." },
    POST_TITLE_REQUIRED: { code: 'POST_TITLE_REQUIRED', message: "Taxonomy title is required." },
    POST_DESCRIPTION_REQUIRED: { code: 'POST_DESCRIPTION_REQUIRED', message: "Không được để trống nội dung bài viết" },
    POST_OBJECT_NOT_FOUND: { code: 'POST_OBJECT_NOT_FOUND', message: "Taxonomy object is not found." },
    POST_ERR_TITLE_REQUIRED: { code: 'POST_ERR_TITLE_REQUIRED', message: "Title is required" },
    POST_ERR_ID_REQUIRED: { code: 'POST_ERR_ID_REQUIRED', message: "Post Id is required" },
    POST_ERR_ALIAS_REQUIRED: { code: 'POST_ERR_ALIAS_REQUIRED', message: "Alias is required" },
    POST_ERR_MOTTO_REQUIRED: { code: 'POST_ERR_MOTTO_REQUIRED', message: "Motto is required" },
    POST_ERR_DESCRIPTION_REQUIRED: { code: 'POST_ERR_DESCRIPTION_REQUIRED', message: "Description is required" },

    //NOTIFICATION 
    NOTIFICATION_ID_REQUIRED: { code: 'NOTIFICATION_ID_REQUIRED', message: "Notification ID is required." },
    NOTIFICATION_TITLE_REQUIRED: { code: 'NOTIFICATION_TITLE_REQUIRED', message: "Notification title is required." },
    NOTIFICATION_MESSAGE_REQUIRED: { code: 'NOTIFICATION_MESSAGE_REQUIRED', message: "Notification message is required." },
    NOTIFICATION_NOT_FOUND: { code: 'NOTIFICATION_NOT_FOUND', message: "Notification is not found." },
    NOTIFICATION_ERR_ADD_FAIL: { code: 'NOTIFICATION_ERR_ADD_FAIL', message: "Notification add failed" },
    NOTIFICATION_ERR_EDIT_FAIL: { code: 'NOTIFICATION_ERR_EDIT_FAIL', message: "Notification edit failed" },
    NOTIFICATION_ERR_UPDATE_FAIL: { code: 'NOTIFICATION_ERR_UPDATE_FAIL', message: "Notification update failed" },
    NOTIFICATION_ERR_RECORD_EXISTED: { code: 'NOTIFICATION_ERR_RECORD_EXISTED', message: "Notification have already existed" },
    NOTIFICATION_ERR_NOT_FOUND: { code: 'NOTIFICATION_ERR_NOT_FOUND', message: "Notification is not found" },
    NOTIFICATION_ERR_ID_REQUIRED: { code: 'NOTIFICATION_ERR_ID_REQUIRED', message: "Notification Id is required" },
    NOTIFICATION_REL_ERR_ID_REQUIRED: { code: 'NOTIFICATION_REL_ERR_ID_REQUIRED', message: "Notification Rel Id is required" },
    NOTIFICATION_ERR_TITLENOTE_REQUIRED: { code: 'NOTIFICATION_ERR_TITLENOTE_REQUIRED', message: "Notification title is required" },

    //MESSAGE
    MESSAGE_ERR_IS_NOT_SOCKET: { code: 'MESSAGE_ERR_IS_NOT_SOCKET', message: "Request is not socket" },
    MESSAGE_ERR_CLASS_ID_REQUIRED: { code: 'MESSAGE_ERR_CLASS_ID_REQUIRED', message: "Class id is required" },
    MESSAGE_ERR_GROUP_ID_REQUIRED: { code: 'MESSAGE_ERR_GROUP_ID_REQUIRED', message: "Message id is required" },
    MESSAGE_ERR_ADD_FAIL: { code: 'MESSAGE_ERR_ADD_FAIL', message: "Message add failed" },
    MESSAGE_ERR_EDIT_FAIL: { code: 'MESSAGE_ERR_EDIT_FAIL', message: "Message edit failed" },
    MESSAGE_ERR_UPDATE_FAIL: { code: 'MESSAGE_ERR_UPDATE_FAIL', message: "Message update failed" },
    MESSAGE_ERR_NOT_FOUND: { code: 'MESSAGE_ERR_NOT_FOUND', message: "Message is not found" },
    MESSAGE_ERR_ID_REQUIRED: { code: 'MESSAGE_ERR_ID_REQUIRED', message: "Message Id is required" },
    MESSAGE_ERR_DATEUSE_REQUIRED: { code: 'MESSAGE_ERR_DATEUSE_REQUIRED', message: 'Missing messageData dateUse' },
    MESSAGE_ERR_TEACHER_PARENT_CLASS_ID_REQUIRED: { code: 'MESSAGE_ERR_TEACHER_PARENT_CLASS_ID_REQUIRED', message: "Id of class or teacher and parent is required" },


    // OTHER
    DATE_USE_REQUIRED: { code: 'DATE_USE_REQUIRED', message: "Date use is required." },

    //ATTENDENT
    ATTENDENT_MONTH_OR_DATE_REQUIRED: { code: 'ATTENDENT_MONTH_OR_DATE_REQUIRED', message: "Month or date is required." },
    ATTENDENT_CLASSID_OR_STUDENTID_REQUIRED: { code: 'ATTENDENT_CLASSID_OR_STUDENTID_REQUIRED', message: "Class id or student id is required." },
    ATTENDENT_DATE_REQUIRED: { code: 'ATTENDENT_DATE_REQUIRED', message: "Date is required." },
    ATTENDENT_DATE_INVALID: { code: 'ATTENDENT_DATE_INVALID', message: "Invalid date." },
    ATTENDENT_TIME_REQUIRED: { code: 'ATTENDENT_TIME_REQUIRED', message: "Time is required." },
    ATTENDENT_NOTE_REQUIRED: { code: 'ATTENDENT_NOTE_REQUIRED', message: "Note is required." },
    ATTENDENT_ID_REQUIRED: { code: 'ATTENDENT_ID_REQUIRED', message: "Attendent ID is required" },
    ATTENDENT_NOT_FOUND: { code: 'ATTENDENT_NOT_FOUND', message: "Attendent is not found" },
    ATTENDENT_MOVING_PROCESS_STEP_REQUIRED: { code: 'ATTENDENT_MOVING_PROCESS_STEP_REQUIRED', message: "Attendent moving process index is required" },
    ATTENDENT_ERR_CLASSID_REQUIRED: { code: 'ATTENDENT_ERR_CLASSID_REQUIRED', message: "Class ID is required" },
    ATTENDENT_ERR_DATEUSE_REQUIRED: { code: 'ATTENDENT_ERR_DATEUSE_REQUIRED', message: "Date use is required" },
    ATTENDENT_ERR_STUDENTID_REQUIRED: { code: 'ATTENDENT_ERR_STUDENTID_REQUIRED', message: "Student ID is required" },
    NO_DATA_ATTENDENT: { code: 'NO_DATA_ATTENDENT', message: "Have no data on chosen date" },

    // ROLE
    ROLE_ERR_ADD_FAIL: { code: 'ROLE_ERR_ADD_FAIL', message: "Role add failed" },
    ROLE_ERR_EDIT_FAIL: { code: 'ROLE_ERR_EDIT_FAIL', message: "Role edit failed" },
    ROLE_ERR_UPDATE_FAIL: { code: 'ROLE_ERR_UPDATE_FAIL', message: "Role update failed" },
    ROLE_ERR_RECORD_EXISTED: { code: 'ROLE_ERR_RECORD_EXISTED', message: "Role have already existed" },
    ROLE_ERR_NOT_FOUND: { code: 'ROLE_ERR_NOT_FOUND', message: "Role is not found" },
    ROLE_ERR_ID_REQUIRED: { code: 'ROLE_ERR_ID_REQUIRED', message: "Role Id is required" },
    ROLE_ERR_TITLE_REQUIRED: { code: 'ROLE_ERR_TITLE_REQUIRED', message: "Title is required" },
    ROLE_ERR_PERMISSION_REQUIRED: { code: 'ROLE_ERR_PERMISSION_REQUIRED', message: "Permission is required" },

    //CURRENCY
    CURRENCY_ID_REQUIRED: { code: 'CURRENCY_ID_REQUIRED', message: "Currency ID is required." },
    CURRENCY_TITLE_REQUIRED: { code: 'CURRENCY_TITLE_REQUIRED', message: "Currency title is required." },
    CURRENCY_CODE_REQUIRED: { code: 'CURRENCY_CODE_REQUIRED', message: "Currency code is required." },
    CURRENCY_NOT_FOUND: { code: 'CURRENCY_NOT_FOUND', message: "Currency is not found." },
    CURRENCY_CODE_DUPLICATED: { code: 'CURRENCY_CODE_DUPLICATED', message: "Code currency was duplicated." },
    DEFAULT_CURRENCY_NOT_EXISTED: { code: 'DEFAULT_CURRENCY_NOT_EXISTED', message: "Default currency is not existed." },
    DEFAULT_CURRENCY_EXISTED: { code: 'DEFAULT_CURRENCY_EXISTED', message: "Default currency is existed." },
    DEFAULT_CURRENCY_NOT_FOUND: { code: 'DEFAULT_CURRENCY_NOT_FOUND', message: "Default currency is not found." },
    DEFAULT_CURRENCY_NOT_ALLOW: { code: 'DEFAULT_CURRENCY_NOT_ALLOW', message: "Default currency is not allow to change status." },

    //FEE ITEM
    FEE_ITEM_ID_REQUIRED: { code: 'FEE_ITEM_ID_REQUIRED', message: "Fee item ID is required." },
    FEE_ITEM_TITLE_REQUIRED: { code: 'FEE_ITEM_TITLE_REQUIRED', message: "Fee item title is required." },
    FEE_ITEM_CODE_REQUIRED: { code: 'FEE_ITEM_CODE_REQUIRED', message: "Fee item title is required." },
    FEE_ITEM_AMOUNT_REQUIRED: { code: 'FEE_ITEM_AMOUNT_REQUIRED', message: "Fee item amount is required." },
    FEE_ITEM_NOT_FOUND: { code: 'FEE_ITEM_NOT_FOUND', message: "Fee item is not found." },
    FEE_ITEM_CODE_DUPLICATED: { code: 'FEE_ITEM_CODE_DUPLICATED', message: "Code fee item was duplicated." },

    //FEE INVOICE
    FEE_INVOICE_ID_REQUIRED: { code: 'FEE_INVOICE_ID_REQUIRED', message: "Fee invoice ID is required." },
    FEE_INVOICE_TITLE_REQUIRED: { code: 'FEE_INVOICE_TITLE_REQUIRED', message: "Fee invoice title is required." },
    FEE_INVOICE_DEADLINE_REQUIRED: { code: 'FEE_INVOICE_DEADLINE_REQUIRED', message: "Fee invoice deadline is required." },
    //FEE_INVOICE_CODE_REQUIRED: { code: 'FEE_INVOICE_CODE_REQUIRED', message: "Fee invoice title is required." },
    FEE_INVOICE_TOTAL_AMOUNT_REQUIRED: { code: 'FEE_INVOICE_TOTAL_AMOUNT_REQUIRED', message: "Fee invoice total amount is required." },
    FEE_INVOICE_PAYMENT_METHOD_REQUIRED: { code: 'FEE_INVOICE_PAYMENT_METHOD_REQUIRED', message: "Fee invoice payment method is required." },
    FEE_INVOICE_PAYMENT_CODE_REQUIRED: { code: 'FEE_INVOICE_PAYMENT_CODE_REQUIRED', message: "Fee invoice payment code is required." },
    FEE_INVOICE_PAYMENT_DATE_REQUIRED: { code: 'FEE_INVOICE_PAYMENT_DATE_REQUIRED', message: "Fee invoice payment date is required." },
    FEE_INVOICE_PAYMENT_DATE_INVALID: { code: 'FEE_INVOICE_PAYMENT_DATE_INVALID', message: "Fee invoice payment date is invalid." },
    FEE_INVOICE_PAID_AMOUNT_REQUIRED: { code: 'FEE_INVOICE_PAID_AMOUNT_REQUIRED', message: "Fee invoice paid amount is required." },
    FEE_INVOICE_PAID_AMOUNT_INVALID: { code: 'FEE_INVOICE_PAID_AMOUNT_INVALID', message: "Fee invoice paid amount must smaller than total amount." },
    FEE_INVOICE_ITEMS_REQUIRED: { code: 'FEE_INVOICE_ITEMS_REQUIRED', message: "Fee invoice items is required." },
    FEE_INVOICE_STUDENTS_REQUIRED: { code: 'FEE_INVOICE_STUDENTS_REQUIRED', message: "Fee invoice students is required." },
    FEE_INVOICE_CLASS_REQUIRED: { code: 'FEE_INVOICE_CLASS_REQUIRED', message: "Fee invoice class is required." },
    FEE_INVOICE_NOT_FOUND: { code: 'FEE_INVOICE_NOT_FOUND', message: "Fee invoice is not found." },
    // FEE_INVOICE_CODE_DUPLICATED: { code: 'FEE_INVOICE_CODE_DUPLICATED', message: "Code fee item was duplicated." },
    FEE_INVOICE_STUDENT_REQUIRED: { code: 'FEE_INVOICE_STUDENTS_REQUIRED', message: "Fee invoice student id is required." },

    //PAYMENT
    PAYMENT_ID_REQUIRED: { code: 'PAYMENT_ID_REQUIRED', message: "Payment ID is required." },
    PAYMENT_FEE_INVOICE_REQUIRED: { code: 'PAYMENT_FEE_INVOICE_REQUIRED', message: "Payment's fee invoice  is required." },
    PAYMENT_AMOUNT_REQUIRED: { code: 'PAYMENT_AMOUNT_REQUIRED', message: "Payment amount is required." },
    PAYMENT_METHOD_REQUIRED: { code: 'PAYMENT_METHOD_REQUIRED', message: "Payment method is required." },
    PAYMENT_PARENT_REQUIRED: { code: 'PAYMENT_PARENT_REQUIRED', message: "Payment parent is required." },
    PAYMENT_STRIPE_TOKEN_REQUIRED: { code: 'PAYMENT_STRIPE_TOKEN_REQUIRED', message: "Payment stripe token is required." },
    PAYMENT_NOT_FOUND: { code: 'PAYMENT_NOT_FOUND', message: "Payment is not found." },
   
    //BRANCH
    BRANCH_CODE_EXISTED: { code: 'BRANCH_CODE_EXISTED', message: "Branch object existed." },
    BRANCH_OBJECT_NOT_FOUND: { code: 'BRANCH_OBJECT_NOT_FOUND', message: "Branch object is not found." },
    BRANCH_ID_REQUIRED: { code: 'BRANCH_ID_REQUIRED', message: "Branch ID is required." },
    BRANCH_CODE_REQUIRED: { code: 'BRANCH_CODE_REQUIRED', message: "Branch Code is required." },
    BRANCH_TITLE_REQUIRED: { code: 'BRANCH_TITLE_REQUIRED', message: "Branch title is required." },    
    BRANCH_MINISTER_REQUIRED: { code: 'BRANCH_MINISTER_REQUIRED', message: "Branch's minister  is required." },
    BRANCH_ADDRESS_REQUIRED: { code: 'BRANCH_ADDRESS_REQUIRED', message: "Branch address is required." },
    
    //EVENT
    EVENT_ID_REQUIRED: { code: 'EVENT_ID_REQUIRED', message: "Event id is required." },
    EVENT_NOT_FOUND: { code: 'EVENT_NOT_FOUND', message: "Event is not found." },
    EVENT_TITLE_REQUIRED: { code: 'EVENT_TITLE_REQUIRED', message: "Event title is required." },
    EVENT_DESCRIPTION_REQUIRED: { code: 'EVENT_DESCRIPTION_REQUIRED', message: "Event title is required" },
    EVENT_RECURRING_DAY_REQUIRED: { code: 'EVENT_RECURRING_DAY_REQUIRED', message: "Event recurring day is required" },
    EVENT_ADDRESS_REQUIRED: { code: 'EVENT_ADDRESS_REQUIRED', message: "Event address is required" },
    
    //ROLE
    ROLE_ID_REQUIRED: { code: 'ROLE_ID_REQUIRED', message: "Role ID is required." },
    ROLE_NAME_REQUIRED: { code: 'ROLE_NAME_REQUIRED', message: "Role name is required." },
    ROLE_NOT_FOUND: { code: 'ROLE_NOT_FOUND', message: "Role is not found." },

    //FEE ITEM
    FORMATION_ID_REQUIRED: { code: 'FORMATION_ID_REQUIRED', message: "Subject ID is required." },
    FORMATION_NAME_REQUIRED: { code: 'FORMATION_NAME_REQUIRED', message: "Subject name is required." },
    FORMATION_NOT_FOUND: { code: 'FORMATION_NOT_FOUND', message: "Subject is not found." },

    //AGENCY
    AGENCY_NOT_FOUND: { code: 'AGENCY_NOT_FOUND', message: "Agency is not found." },
    AGENCY_ID_REQUIRED: { code: 'AGENCY_ID_REQUIRED', message: "Agency ID is required." },
    AGENCY_PASSWORD_REQUIRED: { code: 'AGENCY_PASSWORD_REQUIRED', message: "Agency password is required." },
    AGENCY_CODE_REQUIRED: { code: 'AGENCY_CODE_REQUIRED', message: "Agency code is required." },
    AGENCY_EMAIL_REQUIRED: { code: 'AGENCY_EMAIL_REQUIRED', message: "Agency email is required." },
    AGENCY_NAME_REQUIRED: { code: 'AGENCY_NAME_REQUIRED', message: "Agency name is required." },
    AGENCY_PHONE_REQUIRED: { code: 'AGENCY_PHONE_REQUIRED', message: "Agency phoe is required." },
    AGENCY_CODE_HAS_BEEN_REGISTERED: { code: 'AGENCY_CODE_HAS_BEEN_REGISTERED', message: "Agency code has been registered" },
    AGENCY_EMAIL_HAS_BEEN_REGISTERED: { code: 'AGENCY_EMAIL_HAS_BEEN_REGISTERED', message: "Agency email has been registered" },
    AGENCY_NAME_HAS_BEEN_REGISTERED: { code: 'AGENCY_NAME_HAS_BEEN_REGISTERED', message: "Agency name has been registered" },
    AGENCY_PHONE_HAS_BEEN_REGISTERED: { code: 'AGENCY_PHONE_HAS_BEEN_REGISTERED', message: "Agency phone has been registered" },
};

module.exports = ErrorService;